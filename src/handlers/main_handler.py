from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command

from src.database.connection import connection
from src.keyboards.main_keyboard import main_menu, reviews_menu, calc_intro_keyboard

from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

router = Router()
users_collection = connection["users"]


# üì• /start
@router.message(Command("start"))
async def start_cmd(message: Message):
    user_id = message.from_user.id
    user = await users_collection.find_one({"_id": user_id})
    if not user:
        await users_collection.insert_one({"_id": user_id})
        await message.reply(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è\n"
            "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá",
            reply_markup=main_menu()
        )
    else:
        await message.reply(
            "üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è\n"
            "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá",
            reply_markup=main_menu()
        )

# –ö–Ω–æ–ø–∫–∞ üè† –û—Ç–∑—ã–≤—ã
@router.callback_query(F.data == "reviews_menu")
async def open_reviews_menu(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚≠ê –û—Ç–∑—ã–≤—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reviews_menu()
    )
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ üè† –ú–µ–Ω—é
@router.callback_query(F.data == "main_menu")
async def handle_main_menu(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_menu()
    )


# –ö–Ω–æ–ø–∫–∞ üì¶ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
@router.callback_query(F.data == "calc_cost")
async def start_cost_calc(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text(
        "–î–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É –≤–∞—Å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∏—Ç–∞–π—Å–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "
        "Taobao, Poison, Duodenum –∏–ª–∏ –¥—Ä—É–≥–æ–µ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n"
        "–ë–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—É, –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.",
        reply_markup=calc_intro_keyboard()
    )


# –ö–Ω–æ–ø–∫–∞ üîô –ù–∞–∑–∞–¥
@router.callback_query(F.data == "calc_back_to_intro")
async def back_to_intro(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text(
        "–î–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É –≤–∞—Å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∏—Ç–∞–π—Å–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "
        "Taobao, Poison, Duodenum –∏–ª–∏ –¥—Ä—É–≥–æ–µ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n"
        "–ë–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—É, –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.",
        reply_markup=calc_intro_keyboard()
    )
